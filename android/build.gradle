buildscript {
  ext.kotlinVersion = '1.3.31'
  repositories {
    google()
    mavenLocal()
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:3.4.1'
    classpath 'com.google.gms:google-services:4.2.0'
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    // classpath 'com.google.firebase:firebase-plugins:1.1.5'
  }
}

allprojects {
  task downloadDependencies() {
    description 'Download all dependencies to the Gradle cache'
    doLast {
      configurations.findAll().each { config ->
        if (config.name.contains("minReactNative") && config.canBeResolved) {
          print config.name
          print '\n'
          config.files
        }
      }
    }
  }

  println "${project.name} ${projectDir} ${rootDir}"

  repositories {
    google()
    mavenCentral()
    mavenLocal()
    jcenter()
    maven {
      url "$rootDir/../node_modules/react-native/android"
    }
    maven {
      url "$rootDir/../node_modules/jsc-android/dist"
    }
    maven {
      url 'https://maven.google.com'
    }
    maven {
      url 'https://jitpack.io'
    }
    maven {
      url 'https://dl.bintray.com/kotlin/kotlin-dev/'
    }
  }

}

subprojects {
  task listAllDependencies(type: DependencyReportTask) {}
  ext {
    compileSdk = 28
    buildTools = "28.0.3"
    minSdk = 19
    targetSdk = 28
  }


  afterEvaluate { project ->
    if (!project.name.equalsIgnoreCase("app")
      && project.hasProperty("android")) {
      android {
        compileSdkVersion compileSdk
        buildToolsVersion buildTools
        defaultConfig {
          minSdkVersion minSdk
          targetSdkVersion targetSdk
        }
        variantFilter { variant ->
          def names = variant.flavors*.name
          if (names.contains("minReactNative44")) {
            setIgnore(true)
          }
          if (names.contains("reactNative51") || names.contains("reactNative55") || names.contains("reactNative56") || names.contains("reactNative57")) {
            setIgnore(true)
          }
        }
      }
    }

// Added
    // if ((project.plugins.hasPlugin('android') || project.plugins.hasPlugin('android-library'))) {
    //     android {
    //         variantFilter { variant ->
    //             def names = variant.flavors*.name
    //             // To check for a certain build type, use variant.buildType.name == "<buildType>"
    //             if (names.contains("reactNative51") || names.contains("reactNative55")) {
    //                 // Gradle ignores any variants that satisfy the conditions above.
    //                 setIgnore(true)
    //             }
    //         }
    //     }
    // }
    // if ((project.plugins.hasPlugin('android') || project.plugins.hasPlugin('android-library'))) {
    //     android {
    //         variantFilter { variant ->
    //             def names = variant.flavors*.name
    //             if ( names.contains("reactNative51")
    //                 || names.contains("reactNative55")
    //                 || names.contains("reactNative56")
    //                 || (names.contains("reactNative57") && !names.contains("57_5")) ) {
    //                 setIgnore(true)
    //             }
    //         }
    //     }
    // }

  }
}

wrapper {
  gradleVersion = '4.10.2'
  distributionUrl = distributionUrl.replace("bin", "all")
}
